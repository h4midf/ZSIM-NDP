sim : 
{
  attachDebugger = false;
  traceDriven = false;
  domains = 1;
  contentionThreads = 1;
  phaseLength = 10000;
  statsPhaseInterval = 1000;
  maxPhases = 0L;
  maxMinInstrs = 0L;
  maxTotalInstrs = 5000000000L;
  maxSimTime = 0;
  maxProcEventualDumps = 0;
  skipStatsVectors = false;
  compactPeriodicStats = false;
  ignoreHooks = false;
  ffReinstrument = false;
  registerThreads = false;
  startInGlobalPause = false;
  parallelism = 16;
  schedQuantum = 10000;
  blockingSyscalls = false;
  pinOptions = "";
  logToFile = false;
  printHierarchy = true;
  procStatsFilter = "";
  perProcessDir = false;
  periodicStatsFilter = "";
  perProcessCpuEnum = false;
  printMemoryStats = false;
  gmMBytes = 1024;
  deadlockDetection = true;
  aslr = false;
  strictConfig = true;
};
sys : 
{
  cores : 
  {
    beefy : 
    {
      cores = 6;
      type = "OOO";
      icache = "l1i_beefy";
      dcache = "l1d_beefy";
    };
    wimpy : 
    {
      cores = 10;
      type = "Simple";
      icache = "l1i_wimpy";
      dcache = "l1d_wimpy";
    };
  };
  frequency = 2400;
  lineSize = 64;
  networkFile = "";
  caches : 
  {
    l1d_beefy : 
    {
      children = "";
      isPrefetcher = false;
      size = 32768;
      banks = 1;
      caches = 6;
      type = "Simple";
      array : 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 4;
      nonInclusiveHack = false;
    };
    l1i_beefy : 
    {
      children = "";
      isPrefetcher = false;
      size = 32768;
      banks = 1;
      caches = 6;
      type = "Simple";
      array : 
      {
        ways = 4;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 3;
      nonInclusiveHack = false;
    };
    l2_beefy : 
    {
      children = "l1i_beefy|l1d_beefy";
      isPrefetcher = false;
      size = 262144;
      banks = 1;
      caches = 6;
      type = "Simple";
      array : 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 7;
      nonInclusiveHack = false;
    };
    l1d_wimpy : 
    {
      children = "";
      isPrefetcher = false;
      size = 8192;
      banks = 1;
      caches = 10;
      type = "Simple";
      array : 
      {
        ways = 4;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 2;
      nonInclusiveHack = false;
    };
    l1i_wimpy : 
    {
      children = "";
      isPrefetcher = false;
      size = 16384;
      banks = 1;
      caches = 10;
      type = "Simple";
      array : 
      {
        ways = 8;
        type = "SetAssoc";
        hash = "None";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 3;
      nonInclusiveHack = false;
    };
    l3 : 
    {
      children = "l2_beefy l1i_wimpy|l1d_wimpy";
      isPrefetcher = false;
      size = 12582912;
      banks = 6;
      caches = 1;
      type = "Simple";
      array : 
      {
        ways = 16;
        type = "SetAssoc";
        hash = "H3";
      };
      repl : 
      {
        type = "LRU";
      };
      latency = 27;
      nonInclusiveHack = false;
    };
  };
  mem : 
  {
    controllers = 4;
    type = "DDR";
    ranksPerChannel = 4;
    banksPerRank = 8;
    pageSize = 8192;
    tech = "DDR3-1066-CL8";
    addrMapping = "rank:col:bank";
    deferWrites = true;
    closedPage = true;
    maxRowHits = 4;
    queueDepth = 16;
    controllerLatency = 10;
    splitAddrs = true;
  };
};
process0 : 
{
  patchRoot = "";
  groupWithPrevious = false;
  startFastForwarded = true;
  syncedFastForward = "Multiprocess";
  startPaused = false;
  clockDomain = 0;
  portDomain = 0;
  dumpHeartbeats = 0L;
  dumpsResetHeartbeats = false;
  dumpInstrs = 0L;
  restarts = 0;
  syscallBlacklistRegex = ".*";
  mask = "0:16";
  ffiPoints = "";
  command = "/root/ShenandoahNDP/build/linux-x86_64-server-release/jdk/bin/java -XX:+UseShenandoahGC -XX:ShenandoahGCMode=generational -Xlog:gc* -jar ~/benchmark/DaCapo/dacapo-9.12-MR1-bach.jar avrora";
  input = "";
  loader = "";
  env = "";
};
